{"version":3,"sources":["DataContext.js","components/LocalInfections.js","components/Home.js","components/MaskTemplate.js","components/TimeSale.js","components/RandomSale.js","components/MapModal.js","components/OfficialSale.js","components/CheerKR.js","App.js","index.js"],"names":["dotenv","config","cities","id","idKR","num","url","getCovid19Data","city","axios","method","headers","process","DataStateContext","createContext","LocalDataStateContext","DataProvider","children","useState","certified","undefined","dead","deisolated","updateTime","state","setState","local","setLocal","useEffect","then","response","data","status","code","dateString","Date","announced_timestamp","toLocaleString","year","month","day","console","log","catch","e","error","dataInterval","setInterval","clearInterval","forEach","i","produce","draft","Provider","value","LocalInfections","localData","useContext","Error","useLocalDataState","map","className","key","onClick","window","open","title","Home","useDataState","trueNum","setTrueNum","deadNum","setDeadNum","falseNum","setFalseNum","diff","runCounter","setTimeout","Math","ceil","clearTimeout","interval","MaskTemplate","img","price","name","time","link","sub","style","backgroundImage","TimeSale","maskJSON","item","image","slice","RandomSale","randomMaskJSON","MapModal","localStorage","getItem","document","querySelector","display","setItem","checkBirth","substring","href","target","rel","color","modalHidden","type","placeholder","maxlength","dayData","innerText","OfficialSale","kakao","lat","lng","location","setLocation","setMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","mapContainer","getElementById","mapOption","center","maps","LatLng","level","mapNew","Map","moveLatLng","panTo","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","mounted","useRef","current","event","addListener","getLevel","setLevel","latlng","getCenter","getLat","getLng","getShops","a","get","shops","count","stores","store","created_at","remain_stat","stock_at","content","createElement","stockColor","stockText","backgroundColor","borderRadius","innerHTML","CustomOverlay","printShops","Fragment","CheerKR","App","to","alt","src","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.7613183d.chunk.js","sourcesContent":["import React, { createContext , useContext } from 'react';\r\nimport axios from 'axios';\r\nimport dotenv from 'dotenv';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport produce from 'immer';\r\n\r\ndotenv.config();\r\n\r\nconst COVID_APIKEY = process.env.REACT_APP_COVID19_API_KEY;\r\n\r\nconst cities = [\r\n    {\r\n        id: 'seoul',\r\n        idKR: '서울',\r\n        num: 0,\r\n        url: 'http://www.seoul.go.kr/coronaV/coronaStatus.do'\r\n    },\r\n    {\r\n        id: 'gyeonggi',\r\n        idKR: '경기',\r\n        num: 0,\r\n        url: 'https://www.gg.go.kr/bbs/boardView.do?bsIdx=464&bIdx=2296956&menuId=1535'\r\n    },\r\n    {\r\n        id: 'incheon',\r\n        idKR: '인천',\r\n        num: 0,\r\n        url: 'https://www.incheon.go.kr/'\r\n    },\r\n    {\r\n        id: 'gangwon',\r\n        idKR: '강원',\r\n        num: 0,\r\n        url: 'http://www.provin.gangwon.kr/'\r\n    },\r\n    {\r\n        id: 'chungnam',\r\n        idKR: '충남',\r\n        num: 0,\r\n        url: 'http://www.chungnam.go.kr/coronaStatus.do'\r\n    },\r\n    {\r\n        id: 'chungbuk',\r\n        idKR: '충북',\r\n        num: 0,\r\n        url: 'http://www.chungbuk.go.kr/'\r\n    },\r\n    {\r\n        id: 'sejong',\r\n        idKR: '세종',\r\n        num: 0,\r\n        url: 'https://www.sejong.go.kr/life/sub05_0704.do'\r\n    },\r\n    {\r\n        id: 'daejeon',\r\n        idKR: '대전',\r\n        num: 0,\r\n        url: 'https://www.daejeon.go.kr/corona19/index.do'\r\n    },\r\n    {\r\n        id: 'jeonbuk',\r\n        idKR: '전북',\r\n        num: 0,\r\n        url: 'http://www.jeonbuk.go.kr/'\r\n    },\r\n    {\r\n        id: 'jeonnam',\r\n        idKR: '전남',\r\n        num: 0,\r\n        url: 'https://www.jeonnam.go.kr/coronaMainPage.do'\r\n    },\r\n    {\r\n        id: 'gwangju',\r\n        idKR: '광주',\r\n        num: 0,\r\n        url: 'https://www.gwangju.go.kr/'\r\n    },\r\n    {\r\n        id: 'gyeongbuk',\r\n        idKR: '경북',\r\n        num: 0,\r\n        url: 'http://www.gb.go.kr/Main/index.html'\r\n    },\r\n    {\r\n        id: 'gyeongnam',\r\n        idKR: '경남',\r\n        num: 0,\r\n        url: 'http://www.gyeongnam.go.kr/corona.html'\r\n    },\r\n    {\r\n        id: 'daegu',\r\n        idKR: '대구',\r\n        num: 0,\r\n        url: 'http://www.daegu.go.kr/'\r\n    },\r\n    {\r\n        id: 'ulsan',\r\n        idKR: '울산',\r\n        num: 0,\r\n        url: 'http://www.ulsan.go.kr/corona.jsp'\r\n    },\r\n    {\r\n        id: 'busan',\r\n        idKR: '부산',\r\n        num: 0,\r\n        url: 'http://www.busan.go.kr/corona19/index'\r\n    },\r\n    {\r\n        id: 'jeju',\r\n        idKR: '제주',\r\n        num: 0,\r\n        url: 'https://jeju.go.kr/covid19.jsp'\r\n    },\r\n    {\r\n        id: 'quarantine',\r\n        idKR: '검역',\r\n        num: 0,\r\n        url: 'http://ncov.mohw.go.kr/bdBoardList_Real.do?brdId=1&brdGubun=13&ncvContSeq=&contSeq=&board_id=&gubun='\r\n    },\r\n];\r\n\r\nconst getCovid19Data = (city) => {\r\n    return axios({\r\n        method: \"GET\",\r\n        url: `https://cors-anywhere.herokuapp.com/https://api.dropper.tech/covid19/status/korea?locale=${city}`,\r\n        //CORS 이슈 프록시 서버를 통해 해결\r\n        headers: {\r\n            'APIKey': COVID_APIKEY,\r\n        },\r\n    });    \r\n};\r\n\r\nconst DataStateContext = createContext(null);\r\nconst LocalDataStateContext = createContext(null);\r\n\r\n//context API provider사용할 수 있는 컴포넌트 \r\nexport function DataProvider({children}){\r\n\r\n    const [state, setState] = useState({\r\n        certified: undefined,\r\n        dead: undefined,\r\n        deisolated: undefined,\r\n        updateTime: undefined,\r\n    });\r\n\r\n    const [local, setLocal] = useState(cities);\r\n\r\n    //전국 확진자\r\n    useEffect(() => {\r\n        if(state.certified === undefined) {\r\n            getCovid19Data('synthesize').then(response => {\r\n                if(response.data.status.code === 200) {\r\n                    const updateTime = new Date(response.data.data[0].announced_timestamp * 1000);\r\n                    const dateString = updateTime.toLocaleString('ko-KR', {\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric'\r\n                    });\r\n\r\n                    console.log('result', response.data);\r\n                    console.log('time', dateString );\r\n\r\n                    setState({\r\n                        ...state,\r\n                        certified: response.data.data[0].certified,\r\n                        dead: response.data.data[0].dead,\r\n                        deisolated: response.data.data[0].deisolated,\r\n                        updateTime: dateString,\r\n                    });\r\n                } else {\r\n                    console.log('There is an error');\r\n                }\r\n            }).catch(e => console.error(e));\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        //마운트 된 이후 6시간 단위 업데이트\r\n        const dataInterval = setInterval(() => {\r\n            getCovid19Data().then(response => {\r\n                if(response.data.status.code === 200) {\r\n                    console.log('result2', response.data.data[0]);\r\n                    setState({\r\n                        ...state,\r\n                        certified: response.data.data[0].certified,\r\n                        dead: response.data.data[0].dead,\r\n                        deisolated: response.data.data[0].deisolated,\r\n                    });\r\n                } else {\r\n                    console.log('There is an error');\r\n                }\r\n            }).catch(e => console.error(e));\r\n        }, 21600000);\r\n\r\n        return () => {\r\n            clearInterval(dataInterval);\r\n            console.log('unmount');\r\n        }\r\n    },[]);\r\n\r\n\r\n    //도시 별 확진자\r\n    useEffect(() => {\r\n        if(local[0].num === 0) {\r\n            local.forEach((city, i) => {\r\n                getCovid19Data(city.id).then(response => {    \r\n                    if(response.data.status.code === 200) {\r\n                        setLocal(\r\n                            produce(draft => {\r\n                                draft[i].num = response.data.data[0].certified;\r\n                            })\r\n                        ); //Immer 사용\r\n                    } else {\r\n                        console.log('There is an error');\r\n                    }\r\n                }).catch(e => console.error(e));\r\n            })               \r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        //마운트 된 이후 6시간 단위 업데이트\r\n        const dataInterval = setInterval(() => {\r\n            local.forEach((city, i) => {\r\n                getCovid19Data(city.id).then(response => {    \r\n                    if(response.data.status.code === 200) {\r\n                        setLocal(\r\n                            produce(draft => {\r\n                                draft[i].num = response.data.data[0].certified;\r\n                            })\r\n                        ); //Immer 사용\r\n                    } else {\r\n                        console.log('There is an error');\r\n                    }\r\n                }).catch(e => console.error(e));\r\n            }) \r\n        }, 21600000);\r\n            \r\n        return () => clearInterval(dataInterval);\r\n    },[]);\r\n\r\n    return (\r\n        <DataStateContext.Provider value={state}>\r\n            <LocalDataStateContext.Provider value={local}>\r\n                {children}\r\n            </LocalDataStateContext.Provider>\r\n        </DataStateContext.Provider>\r\n    );\r\n}\r\n\r\n//custom HOOK\r\nexport function useDataState() {\r\n    const context = useContext(DataStateContext);\r\n    if(!context) {\r\n      throw new Error('Cannot find DataStateContext')\r\n    }\r\n      return useContext(DataStateContext);\r\n  }\r\n\r\nexport function useLocalDataState() {\r\n    const context = useContext(LocalDataStateContext);\r\n    if(!context) {\r\n      throw new Error('Cannot find LocalDataStateContext')\r\n    }\r\n      return useContext(LocalDataStateContext);\r\n  }\r\n","import React from 'react';\r\nimport { useLocalDataState } from '../DataContext';\r\n\r\nfunction LocalInfections() {\r\n\r\n    const localData = useLocalDataState();\r\n\r\n    const onClick = (url) => {\r\n        window.open(`${url}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {localData.map((city) => (\r\n            <div className={`city-common ${city.id}`} key={city.id} onClick={() => onClick(city.url)} title=\"새창\">\r\n                <div className=\"cityname\">{city.idKR}</div>\r\n                <div className=\"num\">{city.num}</div>\r\n            </div>\r\n        ))}  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default LocalInfections;","import React, {useState, useEffect} from 'react';\r\nimport LocalInfections from './LocalInfections';\r\nimport { useDataState } from '../DataContext';\r\n\r\nfunction Home() {\r\n\r\n    const data = useDataState();\r\n \r\n    const [trueNum, setTrueNum] = useState(0);\r\n    const [deadNum, setDeadNum] = useState(0);\r\n    const [falseNum, setFalseNum] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let diff;\r\n        const counter = () => {\r\n            diff = data.certified - trueNum;\r\n\r\n        if(diff > 0) {\r\n            setTrueNum(trueNum => trueNum + Math.ceil(diff / 5));\r\n            }\r\n        }\r\n\r\n        let runCounter;\r\n\r\n        if(trueNum < data.certified) {\r\n            runCounter = setTimeout(() => {\r\n                counter();\r\n            }, 10);\r\n        }\r\n        return () => clearTimeout(runCounter);\r\n    }, [trueNum, data]);\r\n\r\n    //count up for infectionDead\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if(deadNum < data.dead) {\r\n                setDeadNum(num => num + 1);\r\n            }\r\n        }, 1);\r\n        return () => clearInterval(interval);\r\n    }, [deadNum, data]);\r\n\r\n    //count up for infectionFalse\r\n    useEffect(() => {\r\n        let diff;\r\n        const counter = () => {\r\n            diff = data.deisolated - falseNum;\r\n\r\n        if(diff > 0) {\r\n            setFalseNum(falseNum => falseNum + Math.ceil(diff / 5));\r\n            }\r\n        }\r\n\r\n        let runCounter;\r\n\r\n        if(falseNum < data.deisolated) {\r\n            runCounter = setTimeout(() => {\r\n                counter();\r\n            }, 10);\r\n        }\r\n        return () => clearTimeout(runCounter);\r\n    }, [falseNum, data]);\r\n \r\n    return (\r\n        <div>\r\n            <section>\r\n            <div className=\"home-img-section\">\r\n                <h1>\r\n                    #코로나 마스크 마켓\r\n                </h1>\r\n            </div>\r\n            </section>\r\n            <section className=\"infection-wrap\">\r\n                <div>\r\n                    <div className=\"updatetime\">\r\n                        {data.updateTime} 기준\r\n                    </div>\r\n                    <div className=\"infection-data\">\r\n                        <div className=\"infection-true\">\r\n                            확진\r\n                            <div className=\"infection-true-num\">\r\n                                {trueNum}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infection-dead\">\r\n                            사망\r\n                            <div className=\"infection-dead-num\">\r\n                                {deadNum}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"infection-false\">\r\n                            격리해제\r\n                            <div className=\"infection-false-num\">\r\n                                {falseNum}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"map\">\r\n                    <LocalInfections />\r\n                </div>\r\n            </section>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { MdTimer } from \"react-icons/md\";\r\n\r\nfunction MaskTemplate({img, price, name, time, link, sub}) {\r\n\r\n    const onClick = (url) => {\r\n        window.open(url);\r\n    };\r\n\r\n  return (\r\n    <>\r\n        <section className=\"mask-section\">\r\n\r\n            <div className=\"mask-wrap\" onClick={() => onClick(link)} title=\"구매링크\">\r\n                <div className=\"mask-img\" \r\n                     title =\"mask\" \r\n                     style = {{backgroundImage: `url(${img})`}}>\r\n                </div>\r\n                <div className=\"item-details\">\r\n                    <h2 className=\"item-price\">\r\n                        {price}\r\n                    </h2>\r\n                    <h3 className=\"item-name\">\r\n                        {name}\r\n                    </h3>\r\n                    {sub === null ? \r\n                    (<h3 className=\"item-time\">\r\n                        <MdTimer className=\"clock\" /> 판매 예정 시간 : {time}\r\n                    </h3>)\r\n                    : (<h4 className=\"item-sub\">\r\n                        {sub}\r\n                    </h4>)\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            {/* {timer !== '00h 00m 00s' ? \r\n            <h2 className=\"item-timer\">\r\n                <MdTimer /> {timer}\r\n            </h2> :\r\n            <h2 className=\"item-selling\">\r\n                {itemText}\r\n            </h2>\r\n            } */}\r\n\r\n                \r\n        </section>\r\n    </>\r\n  );\r\n}\r\nexport default MaskTemplate;","import React, {useEffect} from 'react';\r\nimport MaskTemplate from './MaskTemplate';\r\nimport maskJSON from '../masks.json';\r\n\r\n\r\nfunction TimeSale() {\r\n\r\nuseEffect(() => {\r\n\tconsole.log(maskJSON)\r\n},[]);\r\n\r\n\r\n  // const [date, setDate] = useState(new Date());\r\n\r\n  // const [timer, setTimer] = useState('');\r\n\r\n  // function getTime() {\r\n  //   const dday = new Date(mima.date);\r\n  //   setDate(new Date())\r\n  //   const distance = dday - date;\r\n  //   const hours = Math.floor(\r\n  //     (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  //   );\r\n  //   const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  //   const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n  //   setTimer(`${\r\n  //       hours < 10 ? `0${hours}` : hours\r\n  //     }h ${minutes < 10 ? `0${minutes}` : minutes}m ${\r\n  //       seconds < 10 ? `0${seconds}` : seconds\r\n  //     }s`)\r\n  // }\r\n  \r\n\r\n\r\n//   useEffect(() => {\r\n//     const interval = setInterval(() => {\r\n//         if(timer === '00h 00m 00s') {\r\n//             clearInterval(interval);\r\n//           } else if(timer[1] === '-') {\r\n//             clearInterval(interval);\r\n//           } else {\r\n//               getTime()\r\n//               console.log(timer[1])\r\n//             }\r\n//     }, 1000);\r\n//     return () => clearInterval(interval);\r\n//   }, [date, timer]);\r\n\r\n  \r\n//   //useEffect & setTimeout 으로 판매시작으로 바뀐 태그의 스타일이랑 itemtext 바꾸는 로직 짜기\r\n\r\n//   //리렌더링했을때 타이머 오류 고치는 로직 짜기\r\n\r\n\r\n  return (\r\n    <>\r\n        <section>\r\n            <div className=\"head-section\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t#타임세일\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h3 className=\"head-section-text\">\r\n\t\t\t\t\t특정 시간에 맞춰 마스크를 구매해보세요!\r\n\t\t\t\t</h3>\r\n            </div>\r\n        </section>\r\n        {maskJSON.map((item) => (\r\n          <MaskTemplate \r\n            img={item.image.slice(5,-2)} \r\n            price={item.price} \r\n            name={item.name}\r\n            time={item.time}\r\n\t\t\tlink={item.link}\r\n\t\t\tsub={null}>\r\n          </MaskTemplate>\r\n        ))\r\n        }\r\n    </>\r\n  );\r\n}\r\nexport default TimeSale;\r\n\r\n","import React, {useEffect} from 'react';\r\nimport MaskTemplate from './MaskTemplate';\r\nimport randomMaskJSON from '../randomMasks.json';\r\n\r\n\r\nfunction RandomSale() {\r\n\r\nuseEffect(() => {\r\n\tconsole.log(randomMaskJSON)\r\n},[]);\r\n\r\n\r\n  return (\r\n    <>\r\n        <section>\r\n            <div className=\"head-section\">\r\n            <h1>\r\n                #랜덤세일\r\n            </h1>\r\n            <h3 className=\"head-section-text\">\r\n                게릴라로 판매하는 마스크를 구매해보세요!\r\n            </h3>\r\n            </div>\r\n        </section>\r\n        {randomMaskJSON.map((item) => (\r\n          <MaskTemplate \r\n            img={item.image.slice(5,-2)} \r\n            price={item.price} \r\n            name={item.name}\r\n\t\t\tlink={item.link}\r\n            sub={item.sub}>\r\n          </MaskTemplate>\r\n        ))\r\n        }\r\n    </>\r\n  );\r\n}\r\nexport default RandomSale;\r\n\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nfunction MapModal() {\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('LS_agreed') === 'true') {\r\n            document.querySelector('.map-modal').style.display = \"none\";\r\n        } else {\r\n            localStorage.setItem('LS_agreed', 'false')\r\n        }\r\n    },[])\r\n\r\n    const onClick_agree = () => {\r\n        localStorage.setItem('LS_agreed', 'true');\r\n        document.querySelector('.map-modal').style.display = \"none\";\r\n        document.querySelector('.backbox').style.display = \"none\";\r\n    }\r\n\r\n    const onClick_birth = () => {\r\n        let modalHidden = document.querySelector('.modal-hidden').style.display;\r\n        if(modalHidden === \"block\") {\r\n            document.querySelector('.modal-hidden').style.display = \"none\";\r\n        } else {\r\n            document.querySelector('.modal-hidden').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    const onClick_submit = () => {\r\n        let dayData = checkBirth(document.querySelector('.birth-input').value);\r\n        document.querySelector('.birth-input').value = '';\r\n        document.querySelector('.modal-hidden').style.display = \"none\";\r\n        localStorage.setItem('LS_birth', dayData);\r\n        document.querySelector('.day').innerText = dayData;\r\n\r\n    }\r\n\r\n    const checkBirth = (year) => {\r\n        let day ='';\r\n\r\n        switch(year.substring(3)) {\r\n            case '1' || '6':\r\n                day = \"월요일\";\r\n            break;\r\n            case '2' || '7':\r\n                day = \"화요일\";\r\n            break;\r\n            case '3' || '8':\r\n                day = \"수요일\";\r\n            break;\r\n            case '4' || '9':\r\n                day = \"목요일\";\r\n            break;\r\n            case '5' || '0':\r\n                day = \"금요일\";\r\n            break;\r\n            default:\r\n                day = \"정보없음\";\r\n        }\r\n\r\n        return day;\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <section className=\"map-modal\">\r\n            <h2 className=\"modal-head\">서비스 이용 동의</h2>\r\n            <div className=\"modal-contents\">\r\n                <p>* 공적 마스크 관련 안내는 \r\n                    <a href=\"https://www.mfds.go.kr/bogunMaskPanMae.jsp\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <strong> [식약처 홈페이지]</strong></a>를 참고하세요.\r\n                </p>\r\n                <p>* 코로나마스크마켓에서 제공하는 공적마스크 판매정보는 <strong>5분 이상 지연된</strong> 정보입니다.</p>\r\n                <p>* 일선에서 수고하시는 약사님 등 현장에서 힘써주시는 모든 분들께 감사의 마음을 전합니다.</p>\r\n                <p style={{color: \"red\"}}>* 실제 약국에 있는 재고량과 오차가 발생할 수 있으니 절대로 현장에 계신 약사님들께 문제를 제기하지 말아주세요.</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <div>데이터 관련 문의: 한국정보화진흥원(maskdata@nia.or.kr)</div>\r\n                <button className=\"btn-agree\" onClick={onClick_agree}>동의합니다</button>\r\n            </div>\r\n        </section>\r\n\r\n        <section className=\"date-modal\">\r\n            <div className=\"modal-show\">\r\n                <h4>구매 가능 요일</h4>\r\n                <button onClick={onClick_birth}>확인</button>\r\n            </div>\r\n            <h2 className=\"day\">\r\n                    {!localStorage.getItem('LS_birth')? '정보없음' : localStorage.getItem('LS_birth')}\r\n            </h2>\r\n            <p className=\"day-ref\">[토,일 : 주중에 못산 경우 구매 가능]</p>\r\n            <div className=\"modal-hidden\">\r\n                <div className=\"birth\">\r\n                    출생연도\r\n                </div>\r\n                \r\n                <input className=\"birth-input\" type=\"text\" placeholder=\"ex)1993\" maxlength=\"4\" />\r\n                <button className=\"birth-submit\" onClick={onClick_submit}>제출</button>\r\n                <p>*마스크 5부제를 위한 정보수집입니다.</p>\r\n            </div>\r\n        </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MapModal;","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport MapModal from './MapModal'\r\n\r\n\r\nfunction OfficialSale() {\r\n\r\n    const [kakao] = useState(window.kakao);\r\n    const [location, setLocation] = useState({ //useReducer 사용\r\n        lat: null,\r\n        lng: null,\r\n    })\r\n    \r\n    const { lat, lng } = location;\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if(!lat && !lng) {\r\n            //내 위치 불러오기\r\n            const getLocation = (calback) => {\r\n                if (navigator.geolocation) {\r\n                    navigator.geolocation.getCurrentPosition(\r\n                        position => {\r\n                            const { coords } = position\r\n                            const { latitude, longitude } = coords\r\n                            setLocation({\r\n                                ...location,\r\n                                lat: latitude,\r\n                                lng: longitude\r\n                            })\r\n                        },\r\n                        () => {\r\n                            console.log(\"내 위치를 불러올 수 없습니다.\")\r\n                        }\r\n                    )\r\n                } else {\r\n                    console.log(\"위치를 불러올 수 없습니다.\")\r\n                }\r\n            }\r\n            getLocation();\r\n        }\r\n\r\n        if(!(!!map) && lat && lng) {\r\n            const mapContainer = document.getElementById('kakao-map'),\r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(lat, lng),\r\n                level: 3,\r\n            };\r\n\r\n            // var map = new kakao.maps.Map(mapContainer, mapOption);\r\n            const mapNew = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n            const moveLatLng = new kakao.maps.LatLng(lat, lng);\r\n            mapNew.panTo(moveLatLng);\r\n\r\n            const zoomControl = new kakao.maps.ZoomControl();\r\n            mapNew.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n            setMap(mapNew);\r\n        }\r\n\r\n    }, [lat, lng, map])\r\n\r\n    const mounted = useRef(false);\r\n\r\n    //마우스 드래그로 지도 이동할 때\r\n    useEffect(() => {\r\n\r\n        if(!mounted.current) {\r\n            mounted.current = true;\r\n        } else {\r\n            kakao.maps.event.addListener(map, 'dragend', function() {      \r\n                var level = map.getLevel();\r\n                console.log(level);\r\n                map.setLevel(level); \r\n\r\n                var latlng = map.getCenter(); \r\n\r\n                setLocation({\r\n                    ...location,\r\n                    lat: latlng.getLat(),\r\n                    lng: latlng.getLng()\r\n                })\r\n\r\n            });\r\n\r\n            setMap(map);\r\n    \r\n        }\r\n\r\n      }, [map]);\r\n\r\n\r\n    //지도에 약국들 출력\r\n    useEffect(() => {\r\n\r\n        if(lat && lng) {\r\n            async function getShops() {\r\n                try {\r\n                    //화면 지도 반경만큼 약국 다 보여주기\r\n                    return await axios.get(`https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=1000`)\r\n    \r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                \r\n            }\r\n    \r\n            async function printShops() {\r\n                    if(lat && lng) {\r\n                        const shops = await getShops();\r\n                        console.log(shops.data);\r\n                    \r\n                        if(shops.data.count) {\r\n    \r\n                            shops.data.stores.forEach((store, i) => {\r\n                                const {created_at, name, remain_stat, stock_at, lat, lng} = shops.data.stores[i];\r\n    \r\n                                // 커스텀 오버레이에 표시할 내용    \r\n                                var content = document.createElement('div');\r\n\r\n                                //재고 상태[100개 이상(녹색): 'plenty' / 30개 이상 100개미만(노랑색): 'some' / 2개 이상 30개 미만(빨강색): 'few' / 1개 이하(회색): 'empty' / 판매중지: 'break']\r\n\r\n                                let stockColor = '';\r\n                                let stockText = '';\r\n\r\n                                switch(remain_stat) {\r\n                                    case 'plenty':\r\n                                        stockColor = \"green\";\r\n                                        stockText = \"100개 이상\";\r\n                                      break;\r\n                                    case 'some':\r\n                                        stockColor = \"#ffd800\";\r\n                                        stockText = \"30개~100개\";\r\n                                      break;\r\n                                    case 'few':\r\n                                        stockColor = \"#e00000\";\r\n                                        stockText = \"2개~30개\";\r\n                                      break;\r\n                                    case 'empty':\r\n                                        stockColor = \"#6d6d6d\";\r\n                                        stockText = \"품절\";\r\n                                      break;\r\n                                    case 'break':\r\n                                        stockColor = \"#6d6d6d\";\r\n                                        stockText = \"판매중지\";\r\n                                      break;\r\n                                    default:\r\n                                        stockColor = \"black\";\r\n                                        stockText = \"정보없음\";\r\n                                  }\r\n\r\n                                content.style.backgroundColor = stockColor;\r\n                                content.style.borderRadius = '3px';\r\n\r\n                                content.innerHTML = `\r\n                                <div class=\"store-label\">${stockText}</div>\r\n                                <div class=\"store-details\">\r\n                                    <div style=\"padding-bottom:3px\"> ${name}</div>\r\n                                    <div class=\"text-long\"> 업데이트: ${created_at}</div>\r\n                                    <div class=\"text-long\"> 입고시간: ${stock_at}</div>\r\n                                </div>\r\n                                `\r\n    \r\n                                var position = new kakao.maps.LatLng(lat,lng);  \r\n    \r\n                                var customOverlay = new kakao.maps.CustomOverlay({\r\n                                    position: position,\r\n                                    content: content,\r\n                                });\r\n\r\n    \r\n                                customOverlay.setMap(map);    \r\n\r\n                                //label detail 2개 커스텀 오버레이 컴포넌트 나누기\r\n                            });\r\n                        }\r\n                    }   \r\n            }\r\n    \r\n            printShops();\r\n\r\n        }\r\n        \r\n    },[map,lat,lng]);\r\n\r\n    \r\n    \r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"officialsale-section\">\r\n                <h1>\r\n                    #공적 마스크 판매\r\n            </h1>\r\n\r\n                <h3 className=\"officialsale-section-text\">\r\n                        내 주변 공적 마스크 판매처에서 마스크를 구매해보세요!\r\n            </h3>\r\n            </div>\r\n            \r\n            <div className=\"kakao-map-wrap\">\r\n                <div id=\"kakao-map\">\r\n                <div className=\"backbox\"></div>\r\n                </div>\r\n            </div>\r\n            <MapModal />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default OfficialSale;","import React from 'react';\r\n\r\nfunction CheerKR() {\r\n  return (\r\n    <>\r\n        <section>\r\n            <div className=\"head-section\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t#서포트\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h3 className=\"head-section-text\">\r\n\t\t\t\t\t응원의 메세지를 남겨보세요!\r\n\t\t\t\t</h3>\r\n            </div>\r\n        </section>\r\n    </>\r\n  );\r\n}\r\nexport default CheerKR;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport TimeSale from './components/TimeSale';\nimport RandomSale from './components/RandomSale';\nimport OfficialSale from './components/OfficialSale';\nimport CheerKR from './components/CheerKR';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route, Link} from 'react-router-dom';\nimport {DataProvider} from './DataContext';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <DataProvider>\n            <div id=\"fixed-bar\">\n                <div id=\"fixed-bar-wrap\">\n                    <div id=\"logo-wrap\">\n                        <Link to=\"/corona-mask-market/\" id=\"home-link\">\n                            <img className=\"logo-img\" alt=\"코로나마스크마켓\" src=\"https://image.flaticon.com/icons/png/128/1033/1033165.png\" />\n                            <div className=\"logo-text\">Corona Mask Market</div>\n                        </Link>\n                    </div>\n                    <div id=\"category-wrap\">\n                        <div className=\"category\">\n                            <Link to=\"/corona-mask-market/TimeSale\" className=\"glow\"> Time </Link>\n                        </div>\n                        <div className=\"category\">\n                            <Link to=\"/corona-mask-market/RandomSale\" className=\"glow\"> Random </Link>\n                        </div>\n                        <div className=\"category\">\n                            <Link to=\"/corona-mask-market/OfficialSale\" className=\"glow\"> Official </Link>\n                        </div>\n                        <div className=\"category\">\n                            <Link to=\"/corona-mask-market/CheerKR\" className=\"glow\"> Support </Link>\n                        </div>                \n                    </div>\n                </div>\n            </div>\n            <Route path=\"/corona-mask-market/\" exact={true} component={Home} />\n            <Route path=\"/corona-mask-market/TimeSale\" component={TimeSale} />\n            <Route path=\"/corona-mask-market/RandomSale\" component={RandomSale} />\n            <Route path=\"/corona-mask-market/OfficialSale\" component={OfficialSale} />\n            <Route path=\"/corona-mask-market/CheerKR\" component={CheerKR} />\n\n            <footer className=\"footer\">subin</footer>\n        </DataProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}