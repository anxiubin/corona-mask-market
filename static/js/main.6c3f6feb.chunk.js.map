{"version":3,"sources":["components/LocalInfections.js","components/Home.js","components/TimeSale.js","components/OfficialSale.js","App.js","index.js"],"names":["LocalInfections","id","idKR","num","map","city","className","key","Home","useState","trueNum","setTrueNum","deadNum","setDeadNum","falseNum","setFalseNum","useEffect","interval","setInterval","infectionTrue","clearInterval","Math","round","TimeSale","mima","Date","date","setDate","timer","setTimer","dday","distance","hours","floor","minutes","seconds","getTime","console","log","title","OfficialSale","window","kakao","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","mapTypeId","MapTypeId","ROADMAP","Map","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","event","addListener","message","getBounds","toString","marker","Marker","position","infowindow","InfoWindow","content","open","makeOverListener","close","makeOutListener","Fragment","style","width","height","App","to","alt","src","path","exact","component","RandomSale","CheerKR","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c3f6feb.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n\r\n//추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n\r\n\r\nfunction LocalInfections() {\r\n    \r\n    //테스트용 하드코딩 데이터\r\n\r\n    const cities = [\r\n        {\r\n            id: 'seoul',\r\n            idKR: '서울',\r\n            num: 100,\r\n        },\r\n        {\r\n            id: 'gyeonggi',\r\n            idKR: '경기',\r\n            num: 120,\r\n        },\r\n        {\r\n            id: 'incheon',\r\n            idKR: '인천',\r\n            num: 9,\r\n        },\r\n        {\r\n            id: 'gangwon',\r\n            idKR: '강원',\r\n            num: 25,\r\n        },\r\n        {\r\n            id: 'chungnam',\r\n            idKR: '충남',\r\n            num: 90,\r\n        },\r\n        {\r\n            id: 'chungbuk',\r\n            idKR: '충북',\r\n            num: 15,\r\n        },\r\n        {\r\n            id: 'sejong',\r\n            idKR: '세종',\r\n            num: 1,\r\n        },\r\n        {\r\n            id: 'daejeon',\r\n            idKR: '대전',\r\n            num: 18,\r\n        },\r\n        {\r\n            id: 'jeonbuk',\r\n            idKR: '전북',\r\n            num: 7,\r\n        },\r\n        {\r\n            id: 'jeonnam',\r\n            idKR: '전남',\r\n            num: 5,\r\n        },\r\n        {\r\n            id: 'gwangju',\r\n            idKR: '광주',\r\n            num: 13,\r\n        },\r\n        {\r\n            id: 'kyeongbuk',\r\n            idKR: '경북',\r\n            num: 984,\r\n        },\r\n        {\r\n            id: 'kyeongnam',\r\n            idKR: '경남',\r\n            num: 77,\r\n        },\r\n        {\r\n            id: 'daegu',\r\n            idKR: '대구',\r\n            num: 4693,\r\n        },\r\n        {\r\n            id: 'ulsan',\r\n            idKR: '울산',\r\n            num: 23,\r\n        },\r\n        {\r\n            id: 'busan',\r\n            idKR: '부산',\r\n            num: 95,\r\n        },\r\n        {\r\n            id: 'jeju',\r\n            idKR: '제주',\r\n            num: 4,\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n        {cities.map(city => (\r\n            <div className={`city-common ${city.id}`} key={city.id}>{city.idKR}\r\n                <div className=\"num\">{city.num}</div>\r\n            </div>\r\n        ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LocalInfections;","import React, {useState, useEffect} from 'react';\r\nimport LocalInfections from './LocalInfections';\r\n\r\nfunction Home() {\r\n\r\n    //추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n\r\n  const infectionTrue = 6593;\r\n  const infectionDead = 43;\r\n  const infectionFalse = 108;\r\n\r\n  const [trueNum, setTrueNum] = useState(0);\r\n  const [deadNum, setDeadNum] = useState(0);\r\n  const [falseNum, setFalseNum] = useState(0);\r\n\r\n\r\n\r\n  //count up for infectionTrue\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(trueNum < infectionTrue) {\r\n            setTrueNum(num => num + infectionTrue / 100);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [trueNum]);\r\n\r\n  //count up for infectionDead\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(deadNum < infectionDead) {\r\n            setDeadNum(num => num + 1);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [deadNum]);\r\n\r\n  //count up for infectionFalse\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(falseNum < infectionFalse) {\r\n            setFalseNum(num => num + 1);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [falseNum]);\r\n\r\n\r\n  return (\r\n    <div>\r\n        <section>\r\n           <div className=\"home-img-section\">\r\n               <h1>\r\n                   #코로나 마스크 마켓\r\n               </h1>\r\n           </div>\r\n        </section>\r\n        <section className=\"infection-wrap\">\r\n            <div className=\"infection-data\">\r\n                <div className=\"infection-true\">\r\n                    확진\r\n                    <div className=\"infection-true-num\">\r\n                        {Math.round(trueNum)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"infection-dead\">\r\n                    사망\r\n                    <div className=\"infection-dead-num\">\r\n                        {deadNum}\r\n                    </div>\r\n                </div>\r\n                <div className=\"infection-false\">\r\n                    격리해제\r\n                    <div className=\"infection-false-num\">\r\n                        {falseNum}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"map\">\r\n                <LocalInfections />\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","import React, {useState, useEffect} from 'react';\r\nimport { MdTimer } from \"react-icons/md\";\r\n\r\nfunction TimeSale() {\r\n\r\n\r\n//추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n  const mima = {\r\n      price : 14900,\r\n      name : '마마스크 미마 미세먼지 황사 보건용마스크 10개입(KF94)',\r\n      time : 9,\r\n      date : '2020-03-07:13:58:00+0900'\r\n  }\r\n\r\n  let itemText = '판매시작'\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [timer, setTimer] = useState('');\r\n\r\n  function getTime() {\r\n    const dday = new Date(mima.date);\r\n    setDate(new Date())\r\n    const distance = dday - date;\r\n    const hours = Math.floor(\r\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n    setTimer(`${\r\n        hours < 10 ? `0${hours}` : hours\r\n      }h ${minutes < 10 ? `0${minutes}` : minutes}m ${\r\n        seconds < 10 ? `0${seconds}` : seconds\r\n      }s`)\r\n  }\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(timer === '00h 00m 00s') {\r\n            clearInterval(interval);\r\n          } else if(timer[1] === '-') {\r\n            clearInterval(interval);\r\n          } else {\r\n              getTime()\r\n              console.log(timer[1])\r\n            }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [date, timer]);\r\n\r\n  \r\n  //useEffect & setTimeout 으로 판매시작으로 바뀐 태그의 스타일이랑 itemtext 바꾸는 로직 짜기\r\n\r\n  //리렌더링했을때 타이머 오류 고치는 로직 짜기\r\n\r\n\r\n  return (\r\n    <div>\r\n        <section>\r\n            <div className=\"timesale-section\">\r\n            <h1>\r\n                #타임세일\r\n                </h1>\r\n\r\n            <h3 className=\"timesale-section-text\">\r\n                특정 시간에 맞춰 마스크를 구매해보세요!\r\n                </h3>\r\n            </div>\r\n        </section>\r\n        <section className=\"mask-section\">\r\n\r\n            {/* 마스크 리스트 배열에 담아서 관리 후 map으로 돌아가며 아이템 생성*/}\r\n            <div className=\"mask-wrap\">\r\n                <div className=\"mask-img\" title =\"mask\"></div>\r\n                <div className=\"item-details\">\r\n                    <h3 className=\"item-price\">\r\n                        {mima.price}원 \r\n                    </h3>\r\n                    <h3 className=\"item-name\">\r\n                        {mima.name}\r\n                    </h3>\r\n                    <h4 className=\"item-time\">\r\n                        판매 예정 시간 : {mima.time < 12 ? `오전 ${mima.time}시` : `오후 ${mima.time}시`}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n\r\n            {timer !== '00h 00m 00s' ? \r\n            <h2 className=\"item-timer\">\r\n                <MdTimer /> {timer}\r\n            </h2> :\r\n            <h2 className=\"item-selling\">\r\n                {itemText}\r\n            </h2>\r\n            }\r\n\r\n                 \r\n        </section>\r\n    </div>\r\n  );\r\n}\r\nexport default TimeSale;\r\n\r\n","import React, {useState} from 'react';\r\n\r\nfunction OfficialSale() {\r\n\r\n    const [kakao] = useState(window.kakao);\r\n\r\n    var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n    mapOption = {\r\n        center: new kakao.maps.LatLng(37.56667, 126.98023), // 지도의 중심좌표\r\n        level: 3, // 지도의 확대 레벨\r\n        mapTypeId : kakao.maps.MapTypeId.ROADMAP // 지도종류\r\n    }; \r\n    // 지도를 생성한다 \r\n    var map = new kakao.maps.Map(mapContainer, mapOption); \r\n    // 지도에 확대 축소 컨트롤을 생성한다\r\n    var zoomControl = new kakao.maps.ZoomControl();\r\n    // 지도의 우측에 확대 축소 컨트롤을 추가한다\r\n    map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n    // 지도 영역 변화 이벤트를 등록한다\r\n    kakao.maps.event.addListener(map, 'bounds_changed', function () {\r\n        var mapBounds = map.getBounds(),\r\n            message = '지도의 남서쪽, 북동쪽 영역좌표는 ' +\r\n                        mapBounds.toString() + '입니다.';\r\n        console.log(message);\t\r\n    });\r\n    // 지도에 마커를 생성하고 표시한다\r\n    var marker = new kakao.maps.Marker({\r\n        position: new kakao.maps.LatLng(37.56667, 126.98023), // 마커의 좌표\r\n        map: map // 마커를 표시할 지도 객체\r\n    });\r\n    // 마커 위에 표시할 인포윈도우를 생성한다\r\n    var infowindow = new kakao.maps.InfoWindow({\r\n        content : '<div style=\"padding:5px;\">인포윈도우 :D</div>' // 인포윈도우에 표시할 내용\r\n    });\r\n\r\n\r\n     // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다\r\n    // 이벤트 리스너로는 클로저를 만들어 등록합니다 \r\n    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다\r\n    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));\r\n    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n\r\n    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n    function makeOverListener(map, marker, infowindow) {\r\n        return function() {\r\n            infowindow.open(map, marker);\r\n        };\r\n    }\r\n\r\n    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n    function makeOutListener(infowindow) {\r\n        return function() {\r\n            infowindow.close();\r\n        };\r\n    }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n    \r\n      <div id=\"map\" style={{width:\"100%\", height:\"350px\"}}></div>\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default OfficialSale;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport TimeSale from './components/TimeSale';\nimport RandomSale from './components/RandomSale';\nimport OfficialSale from './components/OfficialSale';\nimport CheerKR from './components/CheerKR';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route, Link} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div id=\"fixed-bar\">\n            <div id=\"fixed-bar-wrap\">\n                <div id=\"logo-wrap\">\n                    <Link to=\"/\" id=\"home-link\">\n                        <img className=\"logo-img\" alt=\"코로나마스크마켓\" src=\"https://image.flaticon.com/icons/png/128/1033/1033165.png\" />\n                        <div className=\"logo-text\">Corona Mask Market</div>\n                    </Link>\n                </div>\n                <div id=\"category-wrap\">\n                    <div className=\"category\">\n                        <Link to=\"/TimeSale\" className=\"glow\"> Time </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/RandomSale\" className=\"glow\"> Random </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/OfficialSale\" className=\"glow\"> Official </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/CheerKR\" className=\"glow\"> Support </Link>\n                    </div>                \n                </div>\n            </div>\n        </div>\n\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/TimeSale\" component={TimeSale} />\n        <Route path=\"/RandomSale\" component={RandomSale} />\n        <Route path=\"/OfficialSale\" component={OfficialSale} />\n        <Route path=\"/CheerKR\" component={CheerKR} />\n\n        <footer className=\"footer\">subin</footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}