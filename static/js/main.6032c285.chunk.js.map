{"version":3,"sources":["components/LocalInfections.js","components/Home.js","components/TimeSale.js","components/OfficialSale.js","App.js","index.js"],"names":["LocalInfections","id","idKR","num","map","city","className","key","Home","useState","trueNum","setTrueNum","deadNum","setDeadNum","falseNum","setFalseNum","useEffect","interval","setInterval","infectionTrue","clearInterval","Math","round","TimeSale","mima","Date","date","setDate","timer","setTimer","dday","distance","hours","floor","minutes","seconds","getTime","console","log","title","OfficialSale","window","kakao","lat","lng","location","setLocation","setMap","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","Map","moveLatLng","panTo","zoomControl","ZoomControl","addControl","ControlPosition","RIGHT","mounted","useRef","current","event","addListener","getLevel","setLevel","latlng","getCenter","getLat","getLng","getShops","a","axios","get","error","shops","data","count","stores","forEach","store","i","created_at","name","remain_stat","stock_at","content","createElement","classList","add","stockColor","stockText","style","backgroundColor","innerHTML","CustomOverlay","printShops","Fragment","App","to","alt","src","path","exact","component","RandomSale","CheerKR","ReactDOM","render"],"mappings":"yRA+GeA,MAxGf,WA6FI,OACI,oCA1FW,CACX,CACIC,GAAI,QACJC,KAAM,eACNC,IAAK,KAET,CACIF,GAAI,WACJC,KAAM,eACNC,IAAK,KAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,GAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,WACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,WACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,SACJC,KAAM,eACNC,IAAK,GAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,GAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,GAET,CACIF,GAAI,UACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,YACJC,KAAM,eACNC,IAAK,KAET,CACIF,GAAI,YACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,QACJC,KAAM,eACNC,IAAK,MAET,CACIF,GAAI,QACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,QACJC,KAAM,eACNC,IAAK,IAET,CACIF,GAAI,OACJC,KAAM,eACNC,IAAK,IAODC,KAAI,SAAAC,GAAI,OACZ,yBAAKC,UAAS,sBAAiBD,EAAKJ,IAAMM,IAAKF,EAAKJ,IAAKI,EAAKH,KAC1D,yBAAKI,UAAU,OAAOD,EAAKF,WClB5BK,MAnFf,WAIE,IAJc,EAQgBC,mBAAS,GARzB,mBAQPC,EARO,KAQEC,EARF,OASgBF,mBAAS,GATzB,mBASPG,EATO,KASEC,EATF,OAUkBJ,mBAAS,GAV3B,mBAUPK,EAVO,KAUGC,EAVH,KA6Cd,OA9BAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACtBR,EAba,MAcZC,GAAW,SAAAR,GAAG,OAAIA,EAAMgB,WAE7B,IACH,OAAO,kBAAMC,cAAcH,MAC1B,CAACP,IAGJM,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACtBN,EAtBa,IAuBZC,GAAW,SAAAV,GAAG,OAAIA,EAAM,OAE7B,IACH,OAAO,kBAAMiB,cAAcH,MAC1B,CAACL,IAGJI,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACtBJ,EA/Bc,KAgCbC,GAAY,SAAAZ,GAAG,OAAIA,EAAM,OAE9B,IACH,OAAO,kBAAMiB,cAAcH,MAC1B,CAACH,IAIF,6BACI,iCACG,yBAAKR,UAAU,oBACX,qFAKP,6BAASA,UAAU,kBACf,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kBAAf,eAEI,yBAAKA,UAAU,sBACVe,KAAKC,MAAMZ,KAGpB,yBAAKJ,UAAU,kBAAf,eAEI,yBAAKA,UAAU,sBACVM,IAGT,yBAAKN,UAAU,mBAAf,2BAEI,yBAAKA,UAAU,uBACVQ,KAIb,yBAAKR,UAAU,OACX,kBAAC,EAAD,U,QCwBDiB,MApGf,WAIE,IAAMC,EACM,MADNA,EAEK,wIAFLA,EAGK,EAHLA,EAIK,2BARO,EAaMf,mBAAS,IAAIgB,MAbnB,mBAaXC,EAbW,KAaLC,EAbK,OAeQlB,mBAAS,IAfjB,mBAeXmB,EAfW,KAeJC,EAfI,KAuDlB,OApBAb,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACZ,gBAAVU,GAEsB,MAAbA,EAAM,GADdR,cAAcH,KArBxB,WACE,IAAMa,EAAO,IAAIL,KAAKD,GACtBG,EAAQ,IAAIF,MACZ,IAAMM,EAAWD,EAAOJ,EAClBM,EAAQX,KAAKY,MAChBF,EAAQ,MAAT,MAEIG,EAAUb,KAAKY,MAAOF,EAAQ,KAAT,KACrBI,EAAUd,KAAKY,MAAOF,EAAQ,IAAkB,KACtDF,EAAS,GAAD,OACJG,EAAQ,GAAR,WAAiBA,GAAUA,EADvB,aAEDE,EAAU,GAAV,WAAmBA,GAAYA,EAF9B,aAGJC,EAAU,GAAV,WAAmBA,GAAYA,EAH3B,MAgBEC,GACAC,QAAQC,IAAIV,EAAM,OAEzB,KACH,OAAO,kBAAMR,cAAcH,MAC1B,CAACS,EAAME,IASR,6BACI,iCACI,yBAAKtB,UAAU,oBACf,yDAIA,wBAAIA,UAAU,yBAAd,iHAKJ,6BAASA,UAAU,gBAGf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WAAWiC,MAAO,SACjC,yBAAKjC,UAAU,gBACX,wBAAIA,UAAU,cACTkB,EADL,UAGA,wBAAIlB,UAAU,aACTkB,GAEL,wBAAIlB,UAAU,aAAd,4CACgBkB,EAAY,GAAZ,uBAAuBA,EAAvB,iCAA4CA,EAA5C,aAKb,gBAAVI,EACD,wBAAItB,UAAU,cACV,kBAAC,IAAD,MADJ,IACiBsB,GAEjB,wBAAItB,UAAU,gBA/ET,+B,mECgNFkC,MAzNf,WAAyB,IAAD,EAEJ/B,mBAASgC,OAAOC,OAAzBA,EAFa,sBAGYjC,mBAAS,CACrCkC,IAAK,KACLC,IAAK,OALW,mBAGbC,EAHa,KAGHC,EAHG,KAOZH,EAAaE,EAAbF,IAAKC,EAAQC,EAARD,IAPO,EAQEnC,mBAAS,MARX,mBAQbL,EARa,KAQR2C,EARQ,KAWpB/B,qBAAU,WAEN,IAAI2B,IAAQC,EAAK,CAITI,UAAUC,YACVD,UAAUC,YAAYC,oBAClB,SAAAC,GAAa,IACDC,EAAWD,EAAXC,OACAC,EAAwBD,EAAxBC,SAAUC,EAAcF,EAAdE,UAClBR,EAAY,eACLD,EADI,CAEPF,IAAKU,EACLT,IAAKU,QAGb,WACIjB,QAAQC,IAAI,oFAIpBD,QAAQC,IAAI,0EAQpB,GAAGK,GAAOC,EAAK,CAEX,IAAIW,EAAeC,SAASC,eAAe,aAC3CC,EAAY,CACRC,OAAQ,IAAIjB,EAAMkB,KAAKC,OAAOlB,EAAKC,GACnCkB,MAAO,GAGP1D,EAAM,IAAIsC,EAAMkB,KAAKG,IAAIR,EAAcG,GAErCM,EAAa,IAAItB,EAAMkB,KAAKC,OAAOlB,EAAKC,GAC9CxC,EAAI6D,MAAMD,GAEV,IAAIE,EAAc,IAAIxB,EAAMkB,KAAKO,YACjC/D,EAAIgE,WAAWF,EAAaxB,EAAMkB,KAAKS,gBAAgBC,OAEvDvB,EAAO3C,GACPiC,QAAQC,IAAI,iBAIlB,CAACK,EAAKC,IAGR,IAAM2B,EAAUC,kBAAO,GAoIvB,OA/HAxD,qBAAU,WAEFuD,EAAQE,SAGR/B,EAAMkB,KAAKc,MAAMC,YAAYvE,EAAK,WAAW,WACzC,IAAI0D,EAAQ1D,EAAIwE,WAChBxE,EAAIyE,SAASf,GAGb,IAAIgB,EAAS1E,EAAI2E,YAEjBjC,EAAY,eACLD,EADI,CAEPF,IAAKmC,EAAOE,SACZpC,IAAKkC,EAAOG,eAWpBlC,EAAO3C,IAvBPmE,EAAQE,SAAU,IA2BrB,CAACrE,IAINY,qBAAU,WAEN,GAAG2B,GAAOC,EAAK,CAAC,IACGsC,EADJ,uCACX,sBAAAC,EAAA,+EAGqBC,IAAMC,IAAN,qFAAwF1C,EAAxF,gBAAmGC,EAAnG,YAHrB,wEAMQP,QAAQiD,MAAR,MANR,wDADW,6FAYX,4BAAAH,EAAA,0DACWxC,IAAOC,EADlB,gCAEgCsC,IAFhC,OAEkBK,EAFlB,OAGYlD,QAAQC,IAAIiD,EAAMC,MAEfD,EAAMC,KAAKC,OAEVF,EAAMC,KAAKE,OAAOC,SAAQ,SAACC,EAAOC,GAAO,IAAD,EACwBN,EAAMC,KAAKE,OAAOG,GAAvEC,EAD6B,EAC7BA,WAAYC,EADiB,EACjBA,KAAMC,EADW,EACXA,YAAaC,EADF,EACEA,SAAUtD,EADZ,EACYA,IAAKC,EADjB,EACiBA,IAGjDsD,EAAU1C,SAAS2C,cAAc,OACrCD,EAAQE,UAAUC,IAAI,eAItB,IAAIC,EAAa,GACbC,EAAY,GAEhB,OAAOP,GACH,IAAK,SACDM,EAAa,QACbC,EAAY,yBACd,MACF,IAAK,OACDD,EAAa,UACbC,EAAY,qBACd,MACF,IAAK,MACDD,EAAa,UACbC,EAAY,mBACd,MACF,IAAK,QACDD,EAAa,UACbC,EAAY,eACd,MACF,IAAK,QACDD,EAAa,UACbC,EAAY,2BACd,MACF,QACID,EAAa,QACbC,EAAY,2BAGpBL,EAAQM,MAAMC,gBAAkBH,EAGhCJ,EAAQQ,UAAR,8IAEuCX,EAFvC,yGAGoCD,EAHpC,yGAIoCG,EAJpC,kIAOEM,EAPF,8EAWA,IAAIpD,EAAW,IAAIT,EAAMkB,KAAKC,OAAOlB,EAAIC,GAErB,IAAIF,EAAMkB,KAAK+C,cAAc,CAC7CxD,SAAUA,EACV+C,QAASA,IAGCnD,OAAO3C,MAlEzC,2CAZW,qDAoFXwG,MAIN,CAACxG,IAIC,kBAAC,IAAMyG,SAAP,KACQ,yBAAKvG,UAAU,wBACX,6EAIA,wBAAIA,UAAU,6BAAd,sJAIR,yBAAKA,UAAU,kBACX,yBAAKL,GAAG,iB,+BCrKT6G,MAtCf,WACE,OACE,kBAAC,IAAD,KACI,yBAAK7G,GAAG,aACJ,yBAAKA,GAAG,kBACJ,yBAAKA,GAAG,aACJ,kBAAC,IAAD,CAAM8G,GAAG,uBAAuB9G,GAAG,aAC/B,yBAAKK,UAAU,WAAW0G,IAAI,mDAAWC,IAAI,8DAC7C,yBAAK3G,UAAU,aAAf,wBAGR,yBAAKL,GAAG,iBACJ,yBAAKK,UAAU,YACX,kBAAC,IAAD,CAAMyG,GAAG,+BAA+BzG,UAAU,QAAlD,WAEJ,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMyG,GAAG,iCAAiCzG,UAAU,QAApD,aAEJ,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMyG,GAAG,mCAAmCzG,UAAU,QAAtD,eAEJ,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMyG,GAAG,8BAA8BzG,UAAU,QAAjD,iBAKhB,kBAAC,IAAD,CAAO4G,KAAK,uBAAuBC,OAAO,EAAMC,UAAW5G,IAC3D,kBAAC,IAAD,CAAO0G,KAAK,+BAA+BE,UAAW7F,IACtD,kBAAC,IAAD,CAAO2F,KAAK,iCAAiCE,UAAWC,MACxD,kBAAC,IAAD,CAAOH,KAAK,mCAAmCE,UAAW5E,IAC1D,kBAAC,IAAD,CAAO0E,KAAK,8BAA8BE,UAAWE,MAErD,4BAAQhH,UAAU,UAAlB,WCxCRiH,IAASC,OAAO,kBAAC,EAAD,MAAQhE,SAASC,eAAe,W","file":"static/js/main.6032c285.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\n\r\n//추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n\r\n\r\nfunction LocalInfections() {\r\n    \r\n    //테스트용 하드코딩 데이터\r\n\r\n    const cities = [\r\n        {\r\n            id: 'seoul',\r\n            idKR: '서울',\r\n            num: 100,\r\n        },\r\n        {\r\n            id: 'gyeonggi',\r\n            idKR: '경기',\r\n            num: 120,\r\n        },\r\n        {\r\n            id: 'incheon',\r\n            idKR: '인천',\r\n            num: 9,\r\n        },\r\n        {\r\n            id: 'gangwon',\r\n            idKR: '강원',\r\n            num: 25,\r\n        },\r\n        {\r\n            id: 'chungnam',\r\n            idKR: '충남',\r\n            num: 90,\r\n        },\r\n        {\r\n            id: 'chungbuk',\r\n            idKR: '충북',\r\n            num: 15,\r\n        },\r\n        {\r\n            id: 'sejong',\r\n            idKR: '세종',\r\n            num: 1,\r\n        },\r\n        {\r\n            id: 'daejeon',\r\n            idKR: '대전',\r\n            num: 18,\r\n        },\r\n        {\r\n            id: 'jeonbuk',\r\n            idKR: '전북',\r\n            num: 7,\r\n        },\r\n        {\r\n            id: 'jeonnam',\r\n            idKR: '전남',\r\n            num: 5,\r\n        },\r\n        {\r\n            id: 'gwangju',\r\n            idKR: '광주',\r\n            num: 13,\r\n        },\r\n        {\r\n            id: 'kyeongbuk',\r\n            idKR: '경북',\r\n            num: 984,\r\n        },\r\n        {\r\n            id: 'kyeongnam',\r\n            idKR: '경남',\r\n            num: 77,\r\n        },\r\n        {\r\n            id: 'daegu',\r\n            idKR: '대구',\r\n            num: 4693,\r\n        },\r\n        {\r\n            id: 'ulsan',\r\n            idKR: '울산',\r\n            num: 23,\r\n        },\r\n        {\r\n            id: 'busan',\r\n            idKR: '부산',\r\n            num: 95,\r\n        },\r\n        {\r\n            id: 'jeju',\r\n            idKR: '제주',\r\n            num: 4,\r\n        },\r\n    ];\r\n\r\n\r\n    return (\r\n        <>\r\n        {cities.map(city => (\r\n            <div className={`city-common ${city.id}`} key={city.id}>{city.idKR}\r\n                <div className=\"num\">{city.num}</div>\r\n            </div>\r\n        ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LocalInfections;","import React, {useState, useEffect} from 'react';\r\nimport LocalInfections from './LocalInfections';\r\n\r\nfunction Home() {\r\n\r\n    //추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n\r\n  const infectionTrue = 6593;\r\n  const infectionDead = 43;\r\n  const infectionFalse = 108;\r\n\r\n  const [trueNum, setTrueNum] = useState(0);\r\n  const [deadNum, setDeadNum] = useState(0);\r\n  const [falseNum, setFalseNum] = useState(0);\r\n\r\n\r\n\r\n  //count up for infectionTrue\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(trueNum < infectionTrue) {\r\n            setTrueNum(num => num + infectionTrue / 100);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [trueNum]);\r\n\r\n  //count up for infectionDead\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(deadNum < infectionDead) {\r\n            setDeadNum(num => num + 1);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [deadNum]);\r\n\r\n  //count up for infectionFalse\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(falseNum < infectionFalse) {\r\n            setFalseNum(num => num + 1);\r\n        }\r\n    }, 10);\r\n    return () => clearInterval(interval);\r\n  }, [falseNum]);\r\n\r\n\r\n  return (\r\n    <div>\r\n        <section>\r\n           <div className=\"home-img-section\">\r\n               <h1>\r\n                   #코로나 마스크 마켓\r\n               </h1>\r\n           </div>\r\n        </section>\r\n        <section className=\"infection-wrap\">\r\n            <div className=\"infection-data\">\r\n                <div className=\"infection-true\">\r\n                    확진\r\n                    <div className=\"infection-true-num\">\r\n                        {Math.round(trueNum)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"infection-dead\">\r\n                    사망\r\n                    <div className=\"infection-dead-num\">\r\n                        {deadNum}\r\n                    </div>\r\n                </div>\r\n                <div className=\"infection-false\">\r\n                    격리해제\r\n                    <div className=\"infection-false-num\">\r\n                        {falseNum}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"map\">\r\n                <LocalInfections />\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","import React, {useState, useEffect} from 'react';\r\nimport { MdTimer } from \"react-icons/md\";\r\n\r\nfunction TimeSale() {\r\n\r\n\r\n//추후 크롤링해서 데이터 가져온 것 state로 관리 (컨텍스트API 활용)\r\n  const mima = {\r\n      price : 14900,\r\n      name : '마마스크 미마 미세먼지 황사 보건용마스크 10개입(KF94)',\r\n      time : 9,\r\n      date : '2020-03-07:13:58:00+0900'\r\n  }\r\n\r\n  let itemText = '판매시작'\r\n\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const [timer, setTimer] = useState('');\r\n\r\n  function getTime() {\r\n    const dday = new Date(mima.date);\r\n    setDate(new Date())\r\n    const distance = dday - date;\r\n    const hours = Math.floor(\r\n      (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n    );\r\n    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n    setTimer(`${\r\n        hours < 10 ? `0${hours}` : hours\r\n      }h ${minutes < 10 ? `0${minutes}` : minutes}m ${\r\n        seconds < 10 ? `0${seconds}` : seconds\r\n      }s`)\r\n  }\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n        if(timer === '00h 00m 00s') {\r\n            clearInterval(interval);\r\n          } else if(timer[1] === '-') {\r\n            clearInterval(interval);\r\n          } else {\r\n              getTime()\r\n              console.log(timer[1])\r\n            }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [date, timer]);\r\n\r\n  \r\n  //useEffect & setTimeout 으로 판매시작으로 바뀐 태그의 스타일이랑 itemtext 바꾸는 로직 짜기\r\n\r\n  //리렌더링했을때 타이머 오류 고치는 로직 짜기\r\n\r\n\r\n  return (\r\n    <div>\r\n        <section>\r\n            <div className=\"timesale-section\">\r\n            <h1>\r\n                #타임세일\r\n                </h1>\r\n\r\n            <h3 className=\"timesale-section-text\">\r\n                특정 시간에 맞춰 마스크를 구매해보세요!\r\n                </h3>\r\n            </div>\r\n        </section>\r\n        <section className=\"mask-section\">\r\n\r\n            {/* 마스크 리스트 배열에 담아서 관리 후 map으로 돌아가며 아이템 생성*/}\r\n            <div className=\"mask-wrap\">\r\n                <div className=\"mask-img\" title =\"mask\"></div>\r\n                <div className=\"item-details\">\r\n                    <h3 className=\"item-price\">\r\n                        {mima.price}원 \r\n                    </h3>\r\n                    <h3 className=\"item-name\">\r\n                        {mima.name}\r\n                    </h3>\r\n                    <h4 className=\"item-time\">\r\n                        판매 예정 시간 : {mima.time < 12 ? `오전 ${mima.time}시` : `오후 ${mima.time}시`}\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n\r\n            {timer !== '00h 00m 00s' ? \r\n            <h2 className=\"item-timer\">\r\n                <MdTimer /> {timer}\r\n            </h2> :\r\n            <h2 className=\"item-selling\">\r\n                {itemText}\r\n            </h2>\r\n            }\r\n\r\n                 \r\n        </section>\r\n    </div>\r\n  );\r\n}\r\nexport default TimeSale;\r\n\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction OfficialSale() {\r\n\r\n    const [kakao] = useState(window.kakao);\r\n    const [location, setLocation] = useState({\r\n        lat: null,\r\n        lng: null,\r\n    })\r\n    const { lat, lng } = location;\r\n    const [map, setMap] = useState(null)\r\n\r\n    //component did mount\r\n    useEffect(() => {\r\n\r\n        if(!lat && !lng) {\r\n\r\n        //내 위치 불러오기\r\n        const getLocation = () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(\r\n                    position => {\r\n                        const { coords } = position\r\n                        const { latitude, longitude } = coords\r\n                        setLocation({\r\n                            ...location,\r\n                            lat: latitude,\r\n                            lng: longitude\r\n                        })\r\n                    },\r\n                    () => {\r\n                        console.log(\"내 위치를 불러올 수 없습니다.\")\r\n                    }\r\n                )\r\n            } else {\r\n                console.log(\"위치를 불러올 수 없습니다.\")\r\n            }\r\n        }\r\n\r\n        getLocation();\r\n        }\r\n\r\n        //지도 생성하기\r\n        if(lat && lng) {\r\n\r\n            var mapContainer = document.getElementById('kakao-map'),\r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(lat, lng),\r\n                level: 3,\r\n            };\r\n\r\n            var map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n            const moveLatLng = new kakao.maps.LatLng(lat, lng);\r\n            map.panTo(moveLatLng);\r\n\r\n            var zoomControl = new kakao.maps.ZoomControl();\r\n            map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n\r\n            setMap(map);\r\n            console.log('create map')\r\n\r\n        }\r\n\r\n    },[lat, lng])\r\n\r\n\r\n    const mounted = useRef(false);\r\n\r\n\r\n\r\n    //마우스 드래그로 지도 이동할 때\r\n    useEffect(() => {\r\n\r\n        if(!mounted.current) {\r\n            mounted.current = true;\r\n        } else {\r\n            kakao.maps.event.addListener(map, 'dragend', function() {      \r\n                var level = map.getLevel();\r\n                map.setLevel(level); \r\n                        \r\n                // 지도 중심좌표를 얻어옵니다 \r\n                var latlng = map.getCenter(); \r\n\r\n                setLocation({\r\n                    ...location,\r\n                    lat: latlng.getLat(),\r\n                    lng: latlng.getLng()\r\n                })\r\n\r\n            });\r\n\r\n            // 확대축소한 상태에서 드래그했을 때 map level유지\r\n            // kakao.maps.event.addListener(map, 'zoom_changed', function() {        \r\n            //     var level = map.getLevel();\r\n            //     map.setLevel(level);\r\n            // });\r\n\r\n            setMap(map);\r\n    \r\n        }\r\n\r\n      }, [map])\r\n\r\n\r\n    //지도에 약국들 출력\r\n    useEffect(() => {\r\n\r\n        if(lat && lng) {\r\n            async function getShops() {\r\n                try {\r\n                    //화면 지도 반경만큼 약국 다 보여주기\r\n                    return await axios.get(`https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json?lat=${lat}&lng=${lng}&m=1000`)\r\n    \r\n                } catch (error) {\r\n                    console.error(error);\r\n                }\r\n                \r\n            }\r\n    \r\n            async function printShops() {\r\n                    if(lat && lng) {\r\n                        const shops = await getShops();\r\n                        console.log(shops.data);\r\n                    \r\n                        if(shops.data.count) {\r\n    \r\n                            shops.data.stores.forEach((store, i) => {\r\n                                const {created_at, name, remain_stat, stock_at, lat, lng} = shops.data.stores[i];\r\n    \r\n                                // 커스텀 오버레이에 표시할 내용    \r\n                                var content = document.createElement('div');\r\n                                content.classList.add('store-label');\r\n\r\n                                //재고 상태[100개 이상(녹색): 'plenty' / 30개 이상 100개미만(노랑색): 'some' / 2개 이상 30개 미만(빨강색): 'few' / 1개 이하(회색): 'empty' / 판매중지: 'break']\r\n\r\n                                let stockColor = '';\r\n                                let stockText = '';\r\n\r\n                                switch(remain_stat) {\r\n                                    case 'plenty':\r\n                                        stockColor = \"green\";\r\n                                        stockText = \"100개 이상\";\r\n                                      break;\r\n                                    case 'some':\r\n                                        stockColor = \"#ffd800\";\r\n                                        stockText = \"30개~100개\";\r\n                                      break;\r\n                                    case 'few':\r\n                                        stockColor = \"#e00000\";\r\n                                        stockText = \"2개~30개\";\r\n                                      break;\r\n                                    case 'empty':\r\n                                        stockColor = \"#6d6d6d\";\r\n                                        stockText = \"품절\";\r\n                                      break;\r\n                                    case 'break':\r\n                                        stockColor = \"#6d6d6d\";\r\n                                        stockText = \"판매중지\";\r\n                                      break;\r\n                                    default:\r\n                                        stockColor = \"black\";\r\n                                        stockText = \"정보없음\";\r\n                                  }\r\n\r\n                                content.style.backgroundColor = stockColor;\r\n\r\n\r\n                                content.innerHTML = `\r\n                                <div class=\"store-details\">\r\n                                    <div style=\"padding-bottom:3px\"> ${name}</div>\r\n                                    <div class=\"text-long\"> 업데이트: ${created_at}</div>\r\n                                    <div class=\"text-long\"> 입고시간: ${stock_at}</div>\r\n                                </div>\r\n                                <div>\r\n                                ${stockText}\r\n                                </div>\r\n                                `\r\n    \r\n                                var position = new kakao.maps.LatLng(lat,lng);  \r\n    \r\n                                var customOverlay = new kakao.maps.CustomOverlay({\r\n                                    position: position,\r\n                                    content: content   \r\n                                });\r\n    \r\n                                customOverlay.setMap(map);    \r\n                            });\r\n                        }\r\n                    }   \r\n            }\r\n    \r\n            printShops();\r\n\r\n        }\r\n        \r\n    },[map])    \r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n                <div className=\"officialsale-section\">\r\n                    <h1>\r\n                        #공적 마스크 판매\r\n                </h1>\r\n\r\n                    <h3 className=\"officialsale-section-text\">\r\n                        내 주변 공적 마스크 판매처에서 마스크를 구매해보세요!\r\n                </h3>\r\n                </div>\r\n            <div className=\"kakao-map-wrap\">\r\n                <div id=\"kakao-map\">\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n\r\nexport default OfficialSale;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport TimeSale from './components/TimeSale';\nimport RandomSale from './components/RandomSale';\nimport OfficialSale from './components/OfficialSale';\nimport CheerKR from './components/CheerKR';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Route, Link} from 'react-router-dom';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <div id=\"fixed-bar\">\n            <div id=\"fixed-bar-wrap\">\n                <div id=\"logo-wrap\">\n                    <Link to=\"/corona-mask-market/\" id=\"home-link\">\n                        <img className=\"logo-img\" alt=\"코로나마스크마켓\" src=\"https://image.flaticon.com/icons/png/128/1033/1033165.png\" />\n                        <div className=\"logo-text\">Corona Mask Market</div>\n                    </Link>\n                </div>\n                <div id=\"category-wrap\">\n                    <div className=\"category\">\n                        <Link to=\"/corona-mask-market/TimeSale\" className=\"glow\"> Time </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/corona-mask-market/RandomSale\" className=\"glow\"> Random </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/corona-mask-market/OfficialSale\" className=\"glow\"> Official </Link>\n                    </div>\n                    <div className=\"category\">\n                        <Link to=\"/corona-mask-market/CheerKR\" className=\"glow\"> Support </Link>\n                    </div>                \n                </div>\n            </div>\n        </div>\n        <Route path=\"/corona-mask-market/\" exact={true} component={Home} />\n        <Route path=\"/corona-mask-market/TimeSale\" component={TimeSale} />\n        <Route path=\"/corona-mask-market/RandomSale\" component={RandomSale} />\n        <Route path=\"/corona-mask-market/OfficialSale\" component={OfficialSale} />\n        <Route path=\"/corona-mask-market/CheerKR\" component={CheerKR} />\n\n        <footer className=\"footer\">subin</footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}